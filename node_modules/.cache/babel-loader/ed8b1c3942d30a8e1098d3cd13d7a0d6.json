{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\ProductPage\\\\ProductPage.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DataContext } from \"../Context\";\nimport ProductGallery from \"./ProductGallery\";\nimport ProductOptions from \"./ProductOptions\";\nimport \"./ProductPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (name, item) => {\n      const {\n        selectedAttributes\n      } = this.state;\n      this.setState({\n        selectedAttributes: { ...selectedAttributes,\n          [name]: item\n        }\n      });\n    };\n\n    this.state = {\n      selectedAttributes: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadProduct();\n  }\n\n  async loadProduct() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      product\n    } = data || {};\n    this.setState({\n      product\n    });\n    this.setState({\n      pictures: product.gallery\n    });\n    this.setState({\n      attributes: product.attributes\n    });\n    this.setState({\n      prices: product.prices\n    });\n    this.setState({\n      description: product.description\n    });\n  }\n\n  render() {\n    var _prices$currentCurren, _prices$currentCurren2;\n\n    const {\n      product = {},\n      pictures = [],\n      attributes = [],\n      prices = [],\n      selectedAttributes = {},\n      description\n    } = this.state;\n    const {\n      currentCurrency,\n      addCart\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productPage__container\",\n      children: [/*#__PURE__*/_jsxDEV(ProductGallery, {\n        pictures: pictures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productPage__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__brand\",\n          children: product.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__model\",\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__attributes\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__options\",\n            children: attributes.map(_ref => {\n              let {\n                name,\n                type,\n                items\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(ProductOptions, {\n                name: name,\n                type: type,\n                items: items,\n                handleChange: this.handleChange,\n                selectedAttributes: selectedAttributes\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__price\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__priceText\",\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__priceValue\",\n              children: [(_prices$currentCurren = prices[currentCurrency]) === null || _prices$currentCurren === void 0 ? void 0 : _prices$currentCurren.currency.symbol, (_prices$currentCurren2 = prices[currentCurrency]) === null || _prices$currentCurren2 === void 0 ? void 0 : _prices$currentCurren2.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productPage__add\",\n            onClick: () => {\n              addCart(product, selectedAttributes);\n            },\n            children: \"ADD TO CART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }, this);\n  }\n\n}\nProductPage.contextType = DataContext;\nexport default _c = withRouter(ProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/ProductPage/ProductPage.js"],"names":["React","Component","withRouter","DataContext","ProductGallery","ProductOptions","ProductPage","constructor","props","handleChange","name","item","selectedAttributes","state","setState","componentDidMount","loadProduct","res","fetch","method","headers","body","JSON","stringify","query","context","currentProduct","data","json","product","pictures","gallery","attributes","prices","description","render","currentCurrency","addCart","brand","map","type","items","currency","symbol","amount","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { DataContext } from \"../Context\"\nimport ProductGallery from \"./ProductGallery\"\nimport ProductOptions from \"./ProductOptions\"\nimport \"./ProductPage.css\"\n\n\nexport class ProductPage extends Component {\n  static contextType = DataContext\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedAttributes: {}\n    }\n  }\n\ncomponentDidMount() {\n  this.loadProduct()\n}\n\nhandleChange = (name, item) => {\n  const { selectedAttributes } = this.state\n  this.setState({ selectedAttributes: {\n    ...selectedAttributes,\n    [name]: item\n  } })\n}\n\nasync loadProduct() {\n  const res = await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n    })\n  })\n  const { data } = await res.json()\n  const { product } = data || {}\n  this.setState({ product })\n  this.setState({ pictures: product.gallery })\n  this.setState({ attributes: product.attributes })\n  this.setState({ prices: product.prices })\n  this.setState({ description: product.description })\n}\n\n  render() {\n    const { product = {}, pictures = [], attributes = [],\n      prices = [], selectedAttributes = {}, description\n    } = this.state\n    const { currentCurrency, addCart } = this.context\n     return (\n       <div className=\"productPage__container\">\n\n         <ProductGallery\n           pictures={pictures}\n         />\n\n         <div className=\"productPage__content\">\n           <div className=\"productPage__brand\">{product.brand}</div>\n           <div className=\"productPage__model\">{product.name}</div>\n           <div className=\"productPage__attributes\" >\n             <div className=\"productPage__options\">\n               {attributes.map(({ name, type, items }) => {\n                 return (\n\n                   <ProductOptions\n                     name={name}\n                     type={type}\n                     items={items}\n                     handleChange={this.handleChange}\n                     selectedAttributes={selectedAttributes}\n                     key={type}\n                   />\n                 )\n\n                })}\n             </div>\n\n             <div className=\"productPage__price\">\n               <div className=\"productPage__priceText\">Price:</div>\n               <div className=\"productPage__priceValue\">\n                 {prices[currentCurrency]?.currency.symbol}\n                 {prices[currentCurrency]?.amount}\n               </div>\n             </div>\n\n             <button\n               className=\"productPage__add\"\n               onClick={() => {\n                  addCart(product, selectedAttributes)\n               }}\n             >\n               ADD TO CART\n             </button>\n             <div className=\"productPage__description\">\n\n             </div>\n           </div>\n         </div>\n       </div>\n     )\n  }\n }\n\nexport default withRouter(ProductPage)"]},"metadata":{},"sourceType":"module"}