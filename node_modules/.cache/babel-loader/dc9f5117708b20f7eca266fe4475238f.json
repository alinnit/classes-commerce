{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\Cart\\\\Cart.js\";\nimport React, { Component } from \"react\";\nimport { DataContext } from \"../Context\";\nimport SelectedOption from \"./SelectedOption\";\nimport \"./Cart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: []\n    };\n  }\n\n  render() {\n    const {\n      cart,\n      currentCurrency\n    } = this.context;\n\n    if (cart.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart\",\n        children: [\" CART\", cart.map((item, index) => {\n          const {\n            product,\n            selectedAttributes\n          } = item;\n          const {\n            name,\n            brand,\n            prices\n          } = product;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart__product\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart__productLeft\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cart__brand\",\n                  children: brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cart__name\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cart__price\",\n                  children: [prices[currentCurrency].currency.symbol, prices[currentCurrency].amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cart__attributes\",\n                  children: Object.entries(selectedAttributes).map(_ref => {\n                    let [name, item] = _ref;\n\n                    // TODO: Extract cartproductvalue component - proprietatile din cart (logica sa afisare a propietatii)\n\n                    /*#__PURE__*/\n                    _jsxDEV(SelectedOption, {\n                      name: name,\n                      item: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 27\n                    }, this); // const { value, type } = item\n                    //     return (\n                    //       <div className=\"cart__capacity\" key={name}>\n                    //         {name}{value}\n                    //       </div>\n                    //     )\n\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart__productRight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\nCart.contextType = DataContext;\nexport default Cart;","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/Cart/Cart.js"],"names":["React","Component","DataContext","SelectedOption","Cart","constructor","props","state","cart","render","currentCurrency","context","length","map","item","index","product","selectedAttributes","name","brand","prices","currency","symbol","amount","Object","entries","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,YAAP;;AAGA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAGlCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAA4B,KAAKC,OAAvC;;AACA,QAAIH,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,4BAEIJ,IAAI,CAACK,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,gBAAM;AAAEC,YAAAA,OAAF;AAAWC,YAAAA;AAAX,cAAkCH,IAAxC;AACA,gBAAM;AAAEI,YAAAA,IAAF;AAAQC,YAAAA,KAAR;AAAeC,YAAAA;AAAf,cAA0BJ,OAAhC;AACA,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,4BACGG;AADH;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,4BACGD;AADH;AAAA;AAAA;AAAA;AAAA,wBAJF,eAOE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,6BACGE,MAAM,CAACV,eAAD,CAAN,CAAwBW,QAAxB,CAAiCC,MADpC,EAC4CF,MAAM,CAACV,eAAD,CAAN,CAAwBa,MADpE;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAUE;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,4BACGC,MAAM,CAACC,OAAP,CAAeR,kBAAf,EAAmCJ,GAAnC,CAAuC,QAAkB;AAAA,wBAAjB,CAACK,IAAD,EAAOJ,IAAP,CAAiB;;AACxD;;AACA;AAAA,4BAAC,cAAD;AACE,sBAAA,IAAI,EAAEI,IADR;AAEE,sBAAA,IAAI,EAAEJ;AAFR;AAAA;AAAA;AAAA;AAAA,6BAFwD,CAMxD;AACA;AACA;AACA;AACA;AACA;;AACD,mBAZA;AADH;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA2BE;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAmCD,SAtCD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA8CD;AACF;;AA9DiC;AAAvBX,I,CACJsB,W,GAAcxB,W;AAgEvB,eAAeE,IAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { DataContext } from \"../Context\"\nimport SelectedOption from \"./SelectedOption\"\nimport \"./Cart.css\"\n\n\nexport class Cart extends Component {\n  static contextType = DataContext\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      cart: []\n    }\n  }\n\n  render() {\n    const { cart, currentCurrency } = this.context\n    if (cart.length === 0) {\n      return <div>Cart is empty</div>\n    } else {\n      return (\n        <div className=\"cart\"> CART\n          {\n            cart.map((item, index) => {\n              const { product, selectedAttributes } = item\n              const { name, brand, prices } = product\n              return (\n                <div key={index}>\n                  <div className=\"cart__product\">\n                    <div className=\"cart__productLeft\">\n                      <div className=\"cart__brand\">\n                        {brand}\n                      </div>\n                      <div className=\"cart__name\">\n                        {name}\n                      </div>\n                      <div className=\"cart__price\">\n                        {prices[currentCurrency].currency.symbol}{prices[currentCurrency].amount}\n                      </div>\n                      <div className=\"cart__attributes\">\n                        {Object.entries(selectedAttributes).map(([name, item]) => {\n                          // TODO: Extract cartproductvalue component - proprietatile din cart (logica sa afisare a propietatii)\n                          <SelectedOption\n                            name={name}\n                            item={item}\n                          />\n                          // const { value, type } = item\n                          //     return (\n                          //       <div className=\"cart__capacity\" key={name}>\n                          //         {name}{value}\n                          //       </div>\n                          //     )\n                        })}\n                      </div>\n                    </div>\n                    <div className=\"cart__productRight\">\n\n                    </div>\n                  </div>\n                </div>\n              )\n            })\n\n        }\n        </div>\n      )\n    }\n  }\n}\n\nexport default Cart\n\n"]},"metadata":{},"sourceType":"module"}