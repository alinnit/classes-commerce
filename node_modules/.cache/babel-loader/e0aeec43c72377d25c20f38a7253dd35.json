{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\components\\\\Context.js\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrency = currentCurrency => {\n      this.setState({\n        currentCurrency\n      });\n    };\n\n    this.getCartKey = _ref => {\n      let {\n        product,\n        selectedAttributes\n      } = _ref;\n      const {\n        name\n      } = product;\n\n      const attributesKey = _.sortBy(Object.entries(selectedAttributes), _ref2 => {\n        let [name] = _ref2;\n        return name;\n      }).map(_ref3 => {\n        let [name, item] = _ref3;\n        return `${name}-${item.id}`;\n      }).join(\"-\").concat(name);\n\n      return attributesKey;\n    };\n\n    this.addCart = (product, selectedAttributes) => {\n      const {\n        cart\n      } = this.state;\n      const cartKey = this.getCartKey({\n        product,\n        selectedAttributes\n      });\n      const cartItem = cart[cartKey] || {\n        product,\n        selectedAttributes\n      };\n      const subTotal = product.prices[this.state.currentCurrency].amount;\n      this.setState({\n        cart: { ...cart,\n          [cartKey]: { ...cartItem,\n            qty: ((cartItem === null || cartItem === void 0 ? void 0 : cartItem.qty) || 0) + 1,\n            subTotal: (product === null || product === void 0 ? void 0 : product.prices[this.state.currentCurrency].amount) + (cartItem === null || cartItem === void 0 ? void 0 : cartItem.qty) * product.prices[this.state.currentCurrency].amount\n          }\n        }\n      });\n      console.log(subTotal);\n    };\n\n    this.deleteCart = (product, selectedAttributes) => {\n      const {\n        cart\n      } = this.state;\n      const cartKey = this.getCartKey({\n        product,\n        selectedAttributes\n      });\n      const cartItem = cart[cartKey] || {\n        product,\n        selectedAttributes\n      };\n      const qty = ((cartItem === null || cartItem === void 0 ? void 0 : cartItem.qty) || 1) - 1;\n\n      if (qty) {\n        this.setState({\n          cart: { ...cart,\n            [cartKey]: { ...cartItem,\n              qty,\n              subTotal: (cartItem === null || cartItem === void 0 ? void 0 : cartItem.qty) * product.prices[this.state.currentCurrency].amount - (product === null || product === void 0 ? void 0 : product.prices[this.state.currentCurrency].amount)\n            }\n          }\n        });\n      } else {\n        this.setState({\n          cart: _.pickBy({ ...cart,\n            [cartKey]: false\n          }, Boolean)\n        });\n      }\n    };\n\n    this.state = {\n      categories: [],\n      currentCurrency: \"0\",\n      cart: {},\n      product: {},\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadCategories();\n  }\n\n  async loadCategories() {\n    var _categories$;\n\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n          query {\n            categories {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n        }\n         `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      categories\n    } = data || {};\n    this.setState({\n      categories,\n      products: categories === null || categories === void 0 ? void 0 : (_categories$ = categories[0]) === null || _categories$ === void 0 ? void 0 : _categories$.products\n    });\n  }\n\n  render() {\n    const {\n      products,\n      categories,\n      currentCurrency,\n      cart\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    const {\n      updateCurrency,\n      addCart,\n      deleteCart\n    } = this;\n    const total = Object.values(this.state.cart).reduce((acc, item) => {\n      return acc + item.subTotal;\n    }, 0);\n    console.log(total);\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        products,\n        categories,\n        currentCurrency,\n        updateCurrency,\n        cart,\n        addCart,\n        deleteCart,\n        total\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/components/Context.js"],"names":["React","Component","_","DataContext","createContext","DataProvider","constructor","props","updateCurrency","currentCurrency","setState","getCartKey","product","selectedAttributes","name","attributesKey","sortBy","Object","entries","map","item","id","join","concat","addCart","cart","state","cartKey","cartItem","subTotal","prices","amount","qty","console","log","deleteCart","pickBy","Boolean","categories","total","componentDidMount","loadCategories","res","fetch","method","headers","body","JSON","stringify","query","data","json","products","render","children","values","reduce","acc"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\"\nimport _ from \"lodash\"\n\n\nexport const DataContext = React.createContext()\n\nexport class DataProvider extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      categories: [],\n      currentCurrency: \"0\",\n      cart: {},\n      product: {},\n      total: 0\n    }\n  }\n\n  updateCurrency = (currentCurrency) => {\n    this.setState({ currentCurrency })\n  }\n\n  getCartKey = ({ product, selectedAttributes }) => {\n    const { name } = product\n    const attributesKey = _.sortBy(Object.entries(selectedAttributes), ([name]) => name)\n      .map(([name, item]) => `${name}-${item.id}`)\n      .join(\"-\")\n      .concat(name)\n    return attributesKey\n\n  }\n\n  addCart = (product, selectedAttributes) => {\n    const { cart } = this.state\n    const cartKey = this.getCartKey({ product, selectedAttributes })\n    const cartItem = cart[cartKey] || { product, selectedAttributes }\n    const subTotal = product.prices[this.state.currentCurrency].amount\n      this.setState({ cart: {\n        ...cart,\n        [cartKey]: {\n          ...cartItem,\n          qty: (cartItem?.qty || 0) + 1,\n          subTotal:\n            product?.prices[this.state.currentCurrency].amount +\n            (cartItem?.qty * product.prices[this.state.currentCurrency].amount)\n        }\n      } })\n      console.log(subTotal)\n    }\n\n\n  deleteCart = (product, selectedAttributes) => {\n    const { cart } = this.state\n    const cartKey = this.getCartKey({ product, selectedAttributes })\n    const cartItem = cart[cartKey] || { product, selectedAttributes }\n    const qty = (cartItem?.qty || 1) - 1\n    if (qty) {\n      this.setState({ cart: {\n        ...cart,\n        [cartKey]: {\n          ...cartItem,\n          qty,\n          subTotal:\n            (cartItem?.qty * product.prices[this.state.currentCurrency].amount) -\n            product?.prices[this.state.currentCurrency].amount\n        }\n      } })\n    } else {\n\n      this.setState({ cart: _.pickBy({\n        ...cart,\n        [cartKey]: false\n      }, Boolean)\n    })\n    }\n  }\n\n  componentDidMount() {\n    this.loadCategories()\n  }\n\n  async loadCategories() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `\n          query {\n            categories {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n        }\n         `\n      })\n    })\n    const { data } = await res.json()\n    const { categories } = data || {}\n\n    this.setState({\n      categories,\n      products: categories?.[0]?.products,\n    })\n }\n\n  render() {\n    const { products, categories, currentCurrency, cart } = this.state\n    const { children } = this.props\n    const { updateCurrency, addCart, deleteCart } = this\n    const total = Object.values(this.state.cart).reduce((acc, item) => {\n      return acc + item.subTotal\n    }, 0)\n    console.log(total)\n    return (\n      <DataContext.Provider\n        value={{\n          products,\n          categories,\n          currentCurrency,\n          updateCurrency,\n          cart,\n          addCart,\n          deleteCart,\n          total\n        }}\n      >\n        {children}\n\n      </DataContext.Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}