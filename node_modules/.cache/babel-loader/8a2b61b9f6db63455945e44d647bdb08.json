{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\ProductPage.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DataContext } from \"./Context\";\nimport \"./css/product.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ProductPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentPic = i => {\n      this.setState({\n        currentPic: i\n      });\n    };\n\n    this.state = {\n      data: {},\n      currentPic: 0,\n      attributeType: \"text\",\n      attributes: [],\n      prices: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadProduct();\n  }\n\n  async loadProduct() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      product\n    } = data || {};\n    this.setState({\n      product\n    });\n    this.setState({\n      pictures: product.gallery\n    });\n    this.setState({\n      attributes: product.attributes\n    }); // this.setState({ items: product.attributes[0].items })\n\n    this.setState({\n      prices: product.prices\n    });\n  }\n\n  render() {\n    var _prices$currentCurren, _prices$currentCurren2;\n\n    const {\n      product = {},\n      pictures = [],\n      currentPic,\n      attributes = [],\n      items = [],\n      prices = []\n    } = this.state;\n    const {\n      currentCurrency,\n      addCart\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productPage__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productPage__gallery\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__gallery__imageList\",\n          children: pictures.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gallery__images\",\n            src: url,\n            alt: \"\",\n            width: \"80\",\n            height: \"80\",\n            onClick: () => this.updateCurrentPic(i)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__gallery__image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pictures[currentPic],\n            alt: \"\",\n            width: \"610\",\n            height: \"511\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__brand\",\n            children: product.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__model\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__attributes\",\n            children: [attributes.map(_ref => {\n              let {\n                name,\n                type,\n                items\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: name\n                }, name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 22\n                }, this), type === \"text\" && items.map(_ref2 => {\n                  let {\n                    value\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text\",\n                    children: value\n                  }, value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 24\n                  }, this);\n                }), attributes.type === \"swatch\" && items.map(_ref3 => {\n                  let {\n                    value\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"swatch\",\n                    children: value\n                  }, value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 24\n                  }, this);\n                })]\n              }, void 0, true);\n            }), attributes.name, attributes.type === \"text\" && items.map(_ref4 => {\n              let {\n                value\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this);\n            }), attributes.type === \"swatch\" && items.map(_ref5 => {\n              let {\n                value\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swatch\",\n                children: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 18\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__price\",\n              children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), (_prices$currentCurren = prices[currentCurrency]) === null || _prices$currentCurren === void 0 ? void 0 : _prices$currentCurren.currency.symbol, (_prices$currentCurren2 = prices[currentCurrency]) === null || _prices$currentCurren2 === void 0 ? void 0 : _prices$currentCurren2.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"productPage__add\",\n              onClick: () => addCart(product.id),\n              children: \"ADD TO CART\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }, this);\n  }\n\n}\nProductPage.contextType = DataContext;\nexport default _c = withRouter(ProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/ProductPage.js"],"names":["React","Component","withRouter","DataContext","ProductPage","constructor","props","updateCurrentPic","i","setState","currentPic","state","data","attributeType","attributes","prices","componentDidMount","loadProduct","res","fetch","method","headers","body","JSON","stringify","query","context","currentProduct","json","product","pictures","gallery","render","items","currentCurrency","addCart","map","url","brand","name","type","value","currency","symbol","amount","id","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { DataContext } from \"./Context\"\nimport \"./css/product.css\"\n\n\nexport class ProductPage extends Component {\n  static contextType = DataContext\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: {},\n      currentPic: 0,\n      attributeType: \"text\",\n      attributes: [],\n      prices: []\n    }\n  }\n\ncomponentDidMount() {\n  this.loadProduct()\n}\nupdateCurrentPic = (i) => {\n  this.setState({ currentPic: i })\n}\n\nasync loadProduct() {\n  const res = await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n    })\n  })\n  const { data } = await res.json()\n  const { product } = data || {}\n  this.setState({ product })\n  this.setState({ pictures: product.gallery })\n  this.setState({ attributes: product.attributes })\n // this.setState({ items: product.attributes[0].items })\n  this.setState({ prices: product.prices })\n}\n\n\n  render() {\n    const { product = {}, pictures = [], currentPic, attributes = [],\n     items = [], prices = [] } = this.state\n    const { currentCurrency, addCart } = this.context\n\n     return (\n       <div className=\"productPage__container\">\n         <div className=\"productPage__gallery\">\n           <div className=\"productPage__gallery__imageList\">\n             {pictures.map((url, i) => (\n               <img\n                 className=\"gallery__images\"\n                 key={i}\n                 src={url}\n                 alt=\"\"\n                 width=\"80\"\n                 height=\"80\"\n                 onClick={() => this.updateCurrentPic(i)}\n               />\n              )\n              )}\n           </div>\n           <div className=\"productPage__gallery__image\">\n             <img src={pictures[currentPic]} alt=\"\" width=\"610\" height=\"511\" />\n           </div>\n           <div className=\"productPage__content\">\n             <div className=\"productPage__brand\">{product.brand}</div>\n             <div className=\"productPage__model\">{product.name}</div>\n             <div className=\"productPage__attributes\">\n               {attributes.map(({ name, type, items }) => {\n                 return (\n                   <>\n                     <div key={name}>{name}</div>\n                     {type === \"text\" && items.map(({ value }) => (\n                       <div key={value} className=\"text\">{value}</div>\n                    ))\n                    }\n                     {attributes.type === \"swatch\" && items.map(({ value }) => (\n                       <div key={value} className=\"swatch\">{value}</div>\n                    ))\n                  }\n                   </>\n                 )\n               })}\n               {attributes.name}\n               {\n                  attributes.type === \"text\" && items.map(({ value }) => (\n                    <div key={value} className=\"text\">{value}</div>\n                  ))\n                }\n               { attributes.type === \"swatch\" && items.map(({ value }) => (\n                 <div key={value} className=\"swatch\">{value}</div>\n                  ))\n               }\n               <div className=\"productPage__price\">\n                 Price: <br></br>\n                 {prices[currentCurrency]?.currency.symbol}\n                 {prices[currentCurrency]?.amount}\n               </div>\n               <button\n                 className=\"productPage__add\"\n                 onClick={() => addCart(product.id)}\n               >\n                 ADD TO CART\n               </button>\n             </div>\n           </div>\n         </div>\n       </div>\n     )\n  }\n }\n\n\nexport default withRouter(ProductPage)"]},"metadata":{},"sourceType":"module"}