{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\components\\\\ProductList\\\\ProductCard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from \"../Context\";\nimport \"./ProductCards.css\";\nimport normal from \"../../normal.png\";\nimport pressed from \"../../pressed.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductCard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      button: normal,\n      selectedAttributes: {},\n      initialAttributes: {}\n    };\n  }\n\n  // handleChange = (name, item) => {\n  //   const { selectedAttributes } = this.state\n  //   this.setState({ selectedAttributes: {\n  //     ...selectedAttributes,\n  //     [name]: item\n  //   } })\n  // }\n  handlePress() {\n    if (this.state.button === normal) {\n      this.setState({\n        button: pressed\n      });\n    } else {\n      this.setState({\n        button: normal\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentCurrency,\n      addCart\n    } = this.context;\n    const {\n      products\n    } = this.props;\n    const {\n      selectedAttributes\n    } = this.state;\n    console.log(selectedAttributes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productCard__container\",\n      children: products.map(_ref => {\n        let {\n          id,\n          gallery,\n          prices,\n          attributes\n        } = _ref;\n        const {\n          name,\n          items\n        } = attributes;\n        return attributes.forEach(attribute => this.setState({\n          selectedAttributes: { ...selectedAttributes,\n            [name]: attribute.items[0].value\n          }\n        }));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nProductCard.contextType = DataContext;\nexport default ProductCard; // {attributes.map((attribute) => {\n//   const { name, items } = attribute\n//   {items.map((item) => {\n//     return (\n//     )\n//   })}\n//   })\n// }\n\n{\n  /* <Link\n           to={`/product/${id}`}\n           key={id}\n           style={{ textDecoration: \"none\" }}\n         >\n           <div\n             className=\"productCard\"\n           >\n             <div className=\"productCard__image\">\n               <img\n                 src={gallery[0]}\n                 alt={id}\n                 width=\"354\"\n                 height=\"330\"\n               />\n             </div>\n             <div className=\"productCard__content\">\n               <div className=\"productCard__contentRight\">\n                 <div className=\"productCard__name\">\n                   {name}\n                 </div>\n                 <div className=\"productCard__price\">\n                   {prices[currentCurrency].currency.symbol}{prices[currentCurrency].amount}\n                 </div>\n               </div>\n               <img\n                 alt=\"\"\n                 src={`${this.state.button}`}\n                 onClick={(event) => {\n                 event.preventDefault()\n                 addCart(products.find(product => product.id === id), selectedAttributes)\n               }}\n               />\n             </div>\n           </div>\n         </Link> */\n}","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/components/ProductList/ProductCard.js"],"names":["React","Component","Link","DataContext","normal","pressed","ProductCard","state","button","selectedAttributes","initialAttributes","handlePress","setState","render","currentCurrency","addCart","context","products","props","console","log","map","id","gallery","prices","attributes","name","items","forEach","attribute","value","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAGA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCM,KAFkC,GAE1B;AACNC,MAAAA,MAAM,EAAEJ,MADF;AAENK,MAAAA,kBAAkB,EAAE,EAFd;AAGNC,MAAAA,iBAAiB,EAAE;AAHb,KAF0B;AAAA;;AAQlC;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKJ,KAAL,CAAWC,MAAX,KAAsBJ,MAA1B,EAAkC;AAChC,WAAKQ,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEH;AAAV,OAAd;AACD,KAFD,MAEO;AACL,WAAKO,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEJ;AAAV,OAAd;AACD;AACF;;AAGDS,EAAAA,MAAM,GAAG;AACT,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAA+B,KAAKC,OAA1C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAET,MAAAA;AAAF,QAAyB,KAAKF,KAApC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYX,kBAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,gBACGQ,QAAQ,CAACI,GAAT,CAAa,QAAyC;AAAA,YAAxC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,OAAN;AAAeC,UAAAA,MAAf;AAAuBC,UAAAA;AAAvB,SAAwC;AACrD,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAkBF,UAAxB;AACA,eACEA,UAAU,CAACG,OAAX,CAAoBC,SAAD,IACjB,KAAKjB,QAAL,CAAc;AAAEH,UAAAA,kBAAkB,EAAE,EAClC,GAAGA,kBAD+B;AAElC,aAACiB,IAAD,GAAQG,SAAS,CAACF,KAAV,CAAgB,CAAhB,EAAmBG;AAFO;AAAtB,SAAd,CADF,CADF;AAQD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeC;;AA7CiC;;AAA9BxB,W,CACGyB,W,GAAc5B,W;AA+CvB,eAAeG,WAAf,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAmB","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { DataContext } from \"../Context\"\nimport \"./ProductCards.css\"\nimport normal from \"../../normal.png\"\nimport pressed from \"../../pressed.png\"\n\n\nclass ProductCard extends Component {\n  static contextType = DataContext\n  state = {\n    button: normal,\n    selectedAttributes: {},\n    initialAttributes: {}\n  }\n\n  // handleChange = (name, item) => {\n  //   const { selectedAttributes } = this.state\n  //   this.setState({ selectedAttributes: {\n  //     ...selectedAttributes,\n  //     [name]: item\n  //   } })\n  // }\n\n  handlePress() {\n    if (this.state.button === normal) {\n      this.setState({ button: pressed })\n    } else {\n      this.setState({ button: normal })\n    }\n  }\n\n\n  render() {\n  const { currentCurrency, addCart } = this.context\n  const { products } = this.props\n  const { selectedAttributes } = this.state\n  console.log(selectedAttributes)\n  return (\n    <div className=\"productCard__container\">\n      {products.map(({ id, gallery, prices, attributes }) => {\n        const { name, items } = attributes\n        return (\n          attributes.forEach((attribute) =>\n            this.setState({ selectedAttributes: {\n              ...selectedAttributes,\n              [name]: attribute.items[0].value\n            } })\n          )\n        )\n      })}\n    </div>\n  )\n  }\n}\n\nexport default ProductCard\n\n\n// {attributes.map((attribute) => {\n//   const { name, items } = attribute\n//   {items.map((item) => {\n//     return (\n\n//     )\n//   })}\n//   })\n// }\n\n{/* <Link\n          to={`/product/${id}`}\n          key={id}\n          style={{ textDecoration: \"none\" }}\n        >\n          <div\n            className=\"productCard\"\n          >\n            <div className=\"productCard__image\">\n              <img\n                src={gallery[0]}\n                alt={id}\n                width=\"354\"\n                height=\"330\"\n              />\n            </div>\n            <div className=\"productCard__content\">\n              <div className=\"productCard__contentRight\">\n                <div className=\"productCard__name\">\n                  {name}\n                </div>\n                <div className=\"productCard__price\">\n                  {prices[currentCurrency].currency.symbol}{prices[currentCurrency].amount}\n                </div>\n              </div>\n              <img\n                alt=\"\"\n                src={`${this.state.button}`}\n                onClick={(event) => {\n                event.preventDefault()\n                addCart(products.find(product => product.id === id), selectedAttributes)\n              }}\n              />\n            </div>\n          </div>\n        </Link> */}"]},"metadata":{},"sourceType":"module"}