{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\ProductPage.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DataContext } from \"./Context\";\nimport \"./css/product.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ProductPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentPic = i => {\n      this.setState({\n        currentPic: i\n      });\n    };\n\n    this.state = {\n      data: {},\n      currentPic: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadProduct();\n  }\n\n  async loadProduct() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      product\n    } = data || {};\n    this.setState({\n      product\n    });\n    this.setState({\n      pictures: product.gallery\n    });\n    this.setState({\n      attributes: product.attributes[0]\n    });\n    this.setState({\n      items: product.attributes[0].items\n    });\n  }\n\n  render() {\n    const {\n      product = {},\n      pictures = [],\n      currentPic,\n      attributes = [],\n      items = []\n    } = this.state;\n\n    switch (attributes.type) {\n      case \"text\":\n        console.log(\"text\");\n        break;\n\n      case \"swatch\":\n        console.log(\"swatch\");\n\n      default:\n        console.log(\"default\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productPage__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__gallery\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__gallery__imageList\",\n            children: pictures.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"gallery__images\",\n              src: url,\n              alt: \"\",\n              width: \"80\",\n              height: \"80\",\n              onClick: () => this.updateCurrentPic(i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__gallery__image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pictures[currentPic],\n              alt: \"\",\n              width: \"610\",\n              height: \"511\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__brand\",\n              children: product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__model\",\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__attributes\",\n              children: attributes.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nProductPage.contextType = DataContext;\nexport default _c = withRouter(ProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/ProductPage.js"],"names":["React","Component","withRouter","DataContext","ProductPage","constructor","props","updateCurrentPic","i","setState","currentPic","state","data","componentDidMount","loadProduct","res","fetch","method","headers","body","JSON","stringify","query","context","currentProduct","json","product","pictures","gallery","attributes","items","render","type","console","log","map","url","brand","name","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { DataContext } from \"./Context\"\nimport \"./css/product.css\"\n\n\nexport class ProductPage extends Component {\n  static contextType = DataContext\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: {},\n      currentPic: 0\n    }\n  }\n\ncomponentDidMount() {\n  this.loadProduct()\n}\nupdateCurrentPic = (i) => {\n  this.setState({ currentPic: i })\n}\n\nasync loadProduct() {\n  const res = await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n    })\n  })\n  const { data } = await res.json()\n  const { product } = data || {}\n  this.setState({ product })\n  this.setState({ pictures: product.gallery })\n  this.setState({ attributes: product.attributes[0] })\n  this.setState({ items: product.attributes[0].items })\n}\n\n  render() {\n    const { product = {}, pictures = [], currentPic, attributes = [], items = [] } = this.state\n    switch (attributes.type) {\n      case \"text\":\n        console.log(\"text\")\n        break\n      case \"swatch\":\n        console.log(\"swatch\")\n      default:\n        console.log(\"default\")\n    }\n    return (\n      <>\n        <div className=\"productPage__container\">\n          <div className=\"productPage__gallery\">\n            <div className=\"productPage__gallery__imageList\">\n              {pictures.map((url, i) => (\n                <img\n                  className=\"gallery__images\"\n                  key={i}\n                  src={url}\n                  alt=\"\"\n                  width=\"80\"\n                  height=\"80\"\n                  onClick={() => this.updateCurrentPic(i)}\n                />\n              )\n              )}\n            </div>\n            <div className=\"productPage__gallery__image\">\n              <img src={pictures[currentPic]} alt=\"\" width=\"610\" height=\"511\" />\n            </div>\n            <div className=\"productPage__content\">\n              <div className=\"productPage__brand\">{product.brand}</div>\n              <div className=\"productPage__model\">{product.name}</div>\n              <div className=\"productPage__attributes\">\n                {attributes.name}\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </>\n\n    )\n  }\n }\n\n\nexport default withRouter(ProductPage)"]},"metadata":{},"sourceType":"module"}