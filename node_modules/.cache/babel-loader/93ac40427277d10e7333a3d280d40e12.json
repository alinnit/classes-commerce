{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\ProductPage.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DataContext } from \"./Context\";\nimport \"./css/product.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ProductPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentPic = i => {\n      this.setState({\n        currentPic: i\n      });\n    };\n\n    this.state = {\n      data: {},\n      currentPic: 0,\n      attributeType: \"text\",\n      attributes: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadProduct();\n  }\n\n  // checkType = (attributes) => {\n  //   switch (attributes.type) {\n  //     case \"text\":\n  //       this.setState({ atrributeType: \"text\" })\n  //       break\n  //     case \"swatch\":\n  //       this.setState({ atrributeType: \"swatch\" })\n  //       break\n  //     default:\n  //       this.setState({ atrributeType: \"text\" })\n  //   }\n  // }\n  async loadProduct() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      product\n    } = data || {};\n    this.setState({\n      product\n    });\n    this.setState({\n      pictures: product.gallery\n    });\n    this.setState({\n      attributes: product.attributes[0]\n    });\n    this.setState({\n      items: product.attributes[0].items\n    });\n  }\n\n  render() {\n    const {\n      product = {},\n      pictures = [],\n      currentPic,\n      attributes = [],\n      items = [],\n      currentCurrency\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productPage__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__gallery\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__gallery__imageList\",\n            children: pictures.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"gallery__images\",\n              src: url,\n              alt: \"\",\n              width: \"80\",\n              height: \"80\",\n              onClick: () => this.updateCurrentPic(i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__gallery__image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pictures[currentPic],\n              alt: \"\",\n              width: \"610\",\n              height: \"511\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__brand\",\n              children: product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__model\",\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__attributes\",\n              children: [attributes.name, attributes.type === \"text\" && items.map(_ref => {\n                let {\n                  value\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text\",\n                  children: value\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this);\n              }), attributes.type === \"swatch\" && items.map(_ref2 => {\n                let {\n                  value\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swatch\",\n                  children: value\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [product.prices[currentCurrency].currency.symbol, product.prices[currentCurrency].amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nProductPage.contextType = DataContext;\nexport default _c = withRouter(ProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/ProductPage.js"],"names":["React","Component","withRouter","DataContext","ProductPage","constructor","props","updateCurrentPic","i","setState","currentPic","state","data","attributeType","attributes","componentDidMount","loadProduct","res","fetch","method","headers","body","JSON","stringify","query","context","currentProduct","json","product","pictures","gallery","items","render","currentCurrency","map","url","brand","name","type","value","prices","currency","symbol","amount","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { DataContext } from \"./Context\"\nimport \"./css/product.css\"\n\n\nexport class ProductPage extends Component {\n  static contextType = DataContext\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: {},\n      currentPic: 0,\n      attributeType: \"text\",\n      attributes: []\n    }\n  }\n\ncomponentDidMount() {\n  this.loadProduct()\n}\nupdateCurrentPic = (i) => {\n  this.setState({ currentPic: i })\n}\n\n// checkType = (attributes) => {\n//   switch (attributes.type) {\n//     case \"text\":\n//       this.setState({ atrributeType: \"text\" })\n//       break\n//     case \"swatch\":\n//       this.setState({ atrributeType: \"swatch\" })\n//       break\n//     default:\n//       this.setState({ atrributeType: \"text\" })\n//   }\n// }\n\nasync loadProduct() {\n  const res = await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query {\n            product (id: \"${this.context.currentProduct}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n    })\n  })\n  const { data } = await res.json()\n  const { product } = data || {}\n  this.setState({ product })\n  this.setState({ pictures: product.gallery })\n  this.setState({ attributes: product.attributes[0] })\n  this.setState({ items: product.attributes[0].items })\n}\n\n\n  render() {\n    const { product = {}, pictures = [], currentPic, attributes = [], items = [], currentCurrency } = this.state\n    return (\n      <>\n        <div className=\"productPage__container\">\n          <div className=\"productPage__gallery\">\n            <div className=\"productPage__gallery__imageList\">\n              {pictures.map((url, i) => (\n                <img\n                  className=\"gallery__images\"\n                  key={i}\n                  src={url}\n                  alt=\"\"\n                  width=\"80\"\n                  height=\"80\"\n                  onClick={() => this.updateCurrentPic(i)}\n                />\n              )\n              )}\n            </div>\n            <div className=\"productPage__gallery__image\">\n              <img src={pictures[currentPic]} alt=\"\" width=\"610\" height=\"511\" />\n            </div>\n            <div className=\"productPage__content\">\n              <div className=\"productPage__brand\">{product.brand}</div>\n              <div className=\"productPage__model\">{product.name}</div>\n              <div className=\"productPage__attributes\">\n                {attributes.name}\n                {\n                  attributes.type === \"text\" && items.map(({ value }) => (\n                    <div key={value} className=\"text\">{value}</div>\n                  ))\n                }\n                { attributes.type === \"swatch\" && items.map(({ value }) => (\n                  <div key={value} className=\"swatch\">{value}</div>\n                  ))\n                }\n                <div>{product.prices[currentCurrency].currency.symbol}{product.prices[currentCurrency].amount}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n\n    )\n  }\n }\n\n\nexport default withRouter(ProductPage)"]},"metadata":{},"sourceType":"module"}