{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\Cart.js\";\nimport React, { Component } from \"react\";\nimport { DataContext } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: [],\n      item: {}\n    };\n  } // componentDidMount() {\n  // }\n\n\n  render() {\n    const {\n      cart,\n      selectedObject\n    } = this.context;\n\n    if (cart.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart_product\",\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__attributes\",\n            children: Object.keys(selectedObject).map(_ref => {\n              let [key, value] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [key, \" : \", value.toString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\nCart.contextType = DataContext;\nexport default Cart;","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/Cart.js"],"names":["React","Component","DataContext","Cart","constructor","props","state","cart","item","render","selectedObject","context","length","map","name","id","Object","keys","key","value","toString","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAGA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAGlCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID,GATiC,CAWlC;AAEA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAA2B,KAAKC,OAAtC;;AACA,QAAIJ,IAAI,CAACK,MAAL,KAAgB,CAApB,EAAuB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA,kBAEEL,IAAI,CAACM,GAAL,CAASL,IAAI,iBACX;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,sBACGA,IAAI,CAACM;AADR,aAAmCN,IAAI,CAACO,EAAxC;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,sBACGC,MAAM,CAACC,IAAP,CAAYP,cAAZ,EAA4BG,GAA5B,CAAgC,QAAkB;AAAA,kBAAjB,CAACK,GAAD,EAAMC,KAAN,CAAiB;AACnD,kCACE;AAAA,2BAAMD,GAAN,SAAcC,KAAK,CAACC,QAAN,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGf,aAJgB;AADH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAUZ,IAAI,CAACO,EAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAFF;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD;AACF;;AAzCiC;AAAvBZ,I,CACJkB,W,GAAcnB,W;AA2CvB,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { DataContext } from \"./Context\"\n\n\nexport class Cart extends Component {\n  static contextType = DataContext\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      cart: [],\n      item: {}\n    }\n  }\n\n  // componentDidMount() {\n\n  // }\n\n  render() {\n    const { cart, selectedObject } = this.context\n    if (cart.length === 0) {\n      return <div>Cart is empty</div>\n    } else {\n      return (\n        <div>\n          {\n          cart.map(item => (\n            <div key={item.id}>\n              <div className=\"cart_product\" key={item.id}>\n                {item.name}\n              </div>\n              <div className=\"productPage__attributes\">\n                {Object.keys(selectedObject).map(([key, value]) => {\n                return (\n                  <div>{key} : {value.toString()}</div>\n                )\n})}\n              </div>\n            </div>\n          ))\n        }\n        </div>\n      )\n    }\n  }\n}\n\nexport default Cart"]},"metadata":{},"sourceType":"module"}