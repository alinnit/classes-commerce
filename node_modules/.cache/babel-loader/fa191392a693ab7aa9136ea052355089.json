{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\ProductPage\\\\ProductOptions.js\";\nimport React, { Component } from \"react\";\nimport \"./ProductPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductOptions extends Component {\n  render() {\n    const {\n      name,\n      items,\n      type,\n      selectedAttributes,\n      handleChange\n    } = this.props; // TODO: extract as attribute component, logica de afisare a selectorului\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), items.map(item => {\n        var _selectedAttributes$n;\n\n        const {\n          id,\n          value\n        } = item;\n        const selected = ((_selectedAttributes$n = selectedAttributes[name]) === null || _selectedAttributes$n === void 0 ? void 0 : _selectedAttributes$n.value) === value;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          onClick: () => this.handleChange(name, item),\n          children: [value, \" \", \" \", selected && \"X\"]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 26\n        }, this);\n      })]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default ProductOptions;","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/ProductPage/ProductOptions.js"],"names":["React","Component","ProductOptions","render","name","items","type","selectedAttributes","handleChange","props","map","item","id","value","selected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;;AAEA,OAAO,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAE5CE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,kBAArB;AAAyCC,MAAAA;AAAzC,QAA0D,KAAKC,KAArE,CADO,CAEsB;;AAC7B,wBACE;AAAA,8BACE;AAAA,kBAAML;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAAA;;AACN,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA;AAAN,YAAgBF,IAAtB;AACD,cAAMG,QAAQ,GAAG,0BAAAP,kBAAkB,CAACH,IAAD,CAAlB,gFAA0BS,KAA1B,MAAoCA,KAArD;AACC,4BACE;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKL,YAAL,CAAkBJ,IAAlB,EAAwBO,IAAxB,CAHjB;AAAA,qBAKGE,KALH,OAKW,GALX,EAKgBC,QAAQ,IAAI,GAL5B;AAAA,WACOD,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AASA,OAZd,CAFH;AAAA,OAAUT,IAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAxB2C;AA6B9C,eAAeF,cAAf","sourcesContent":["import React, { Component } from \"react\"\nimport \"./ProductPage.css\"\n\nexport class ProductOptions extends Component {\n\n  render() {\n    const { name, items, type, selectedAttributes, handleChange } = this.props\n                                 // TODO: extract as attribute component, logica de afisare a selectorului\n    return (\n      <div key={name}>\n        <div>{name}</div>\n        {items.map((item) => {\n                       const { id, value } = item\n                      const selected = selectedAttributes[name]?.value === value\n                       return (\n                         <div\n                           key={value}\n                           className=\"text\"\n                           onClick={() => this.handleChange(name, item)}\n                         >\n                           {value} {\" \"}{selected && \"X\"}\n                         </div>\n                       )\n                      })\n                    }\n      </div>\n    )\n  }\n\n}\n\n\nexport default ProductOptions"]},"metadata":{},"sourceType":"module"}