{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\Context.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      product: {},\n      currentCategory: \"all\" // currentProductId: \"ps-5\"\n\n    };\n  }\n\n  componentDidMount() {\n    this.loadCategories();\n  }\n\n  async loadCategories() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n          query {\n            categories {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n        }\n         `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      categories\n    } = data || {};\n    this.setState({\n      categories\n    });\n  }\n\n  render() {\n    const {\n      categories,\n      product,\n      currentCategory,\n      currentProductId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        categories,\n        product,\n        currentCategory,\n        currentProductId,\n        updateCategory: name => {\n          this.setState({\n            currentCategory: name\n          });\n        },\n        updateProductId: id => {\n          this.setState({\n            currentProductId: id\n          });\n        }\n      },\n      children: [this.props.children, console.log(this.state.currentProductId)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/Context.js"],"names":["React","Component","DataContext","createContext","DataProvider","constructor","props","state","categories","product","currentCategory","componentDidMount","loadCategories","res","fetch","method","headers","body","JSON","stringify","query","data","json","setState","render","currentProductId","updateCategory","name","updateProductId","id","children","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;AAEP,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,eAAe,EAAE,KAHN,CAIX;;AAJW,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,cAAL;AACD;;AAEoB,QAAdA,cAAc,GAAG;AACrB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAD,EAA2B;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFuC;AAGhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjC2B,OAAf;AAH0C,KAA3B,CAAvB;AAuCA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACS,IAAJ,EAAvB;AACA,UAAM;AAAEd,MAAAA;AAAF,QAAiBa,IAAI,IAAI,EAA/B;AACA,SAAKE,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACF;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,UAAF;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA,eAAvB;AAAwCe,MAAAA;AAAxC,QAA6D,KAAKlB,KAAxE;AACA,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAC3BC,QAAAA,UAD2B;AAE3BC,QAAAA,OAF2B;AAG3BC,QAAAA,eAH2B;AAI3Be,QAAAA,gBAJ2B;AAK3BC,QAAAA,cAAc,EAAGC,IAAD,IAAU;AACzB,eAAKJ,QAAL,CAAc;AAAEb,YAAAA,eAAe,EAAEiB;AAAnB,WAAd;AACA,SAP0B;AAQ3BC,QAAAA,eAAe,EAAGC,EAAD,IAAQ;AACxB,eAAKN,QAAL,CAAc;AAAEE,YAAAA,gBAAgB,EAAEI;AAApB,WAAd;AACA;AAV0B,OAA7B;AAAA,iBAaG,KAAKvB,KAAL,CAAWwB,QAbd,EAcGC,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWkB,gBAAvB,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAhF0C","sourcesContent":["import React, { Component } from \"react\";\n\nexport const DataContext = React.createContext()\n\nexport class DataProvider extends Component {\n constructor(props) {\n   super(props)\n   this.state = {\n     categories: [],\n     product: {},\n     currentCategory: \"all\",\n     // currentProductId: \"ps-5\"\n   }\n }\n\n componentDidMount() {\n   this.loadCategories()\n }\n\n  async loadCategories() {\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `\n          query {\n            categories {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n        }\n         `\n      })\n    })\n    const { data } = await res.json()\n    const { categories } = data || {}\n    this.setState({ categories })\n }\n\n render() {\n   const { categories, product, currentCategory, currentProductId } = this.state\n   return (\n     <DataContext.Provider value={{\n       categories,\n       product,\n       currentCategory,\n       currentProductId,\n       updateCategory: (name) => {\n        this.setState({ currentCategory: name })\n       },\n       updateProductId: (id) => {\n        this.setState({ currentProductId: id })\n       }\n      }}\n     >\n       {this.props.children}\n       {console.log(this.state.currentProductId)}\n     </DataContext.Provider>\n   )\n }\n\n}"]},"metadata":{},"sourceType":"module"}