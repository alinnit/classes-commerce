{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\Components\\\\ProductPage\\\\ProductAttributes.js\";\nimport React, { Component } from \"react\";\nimport \"../css/productPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductAttributes extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = (name, item) => {\n      const {\n        selectedAttributes\n      } = this.state;\n      this.setState({\n        selectedAttributes: { ...selectedAttributes,\n          [name]: item\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      attributes,\n      selectedAttributes\n    } = this.props; // TODO: extract as attribute component, logica de afisare a selectorului\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: attributes.map(_ref => {\n        let {\n          name,\n          type,\n          items\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 22\n          }, this), items.map(item => {\n            const {\n              value\n            } = item;\n            const selected = selectedAttributes[name].value === value;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              onClick: () => this.handleChange(name, item),\n              children: [value, \" \", selected && \"X\"]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 26\n            }, this);\n          })]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default ProductAttributes;","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/Components/ProductPage/ProductAttributes.js"],"names":["React","Component","ProductAttributes","handleChange","name","item","selectedAttributes","state","setState","render","attributes","props","map","type","items","value","selected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;;AAEA,OAAO,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAG/CE,YAH+C,GAGhC,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAyB,KAAKC,KAApC;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE,EAClC,GAAGA,kBAD+B;AAElC,WAACF,IAAD,GAAQC;AAF0B;AAAtB,OAAd;AAID,KAT8C;AAAA;;AAW/CI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcJ,MAAAA;AAAd,QAAqC,KAAKK,KAAhD,CADO,CAEsB;;AAC7B,wBACE;AAAA,gBACGD,UAAU,CAACE,GAAX,CAAe,QAA2B;AAAA,YAA1B;AAAER,UAAAA,IAAF;AAAQS,UAAAA,IAAR;AAAcC,UAAAA;AAAd,SAA0B;AAClC,4BACE;AAAA,kCACE;AAAA,sBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGU,KAAK,CAACF,GAAN,CAAWP,IAAD,IAAU;AACnB,kBAAM;AAAEU,cAAAA;AAAF,gBAAYV,IAAlB;AACA,kBAAMW,QAAQ,GAAGV,kBAAkB,CAACF,IAAD,CAAlB,CAAyBW,KAAzB,KAAmCA,KAApD;AACA,gCACE;AAEE,cAAA,SAAS,EAAC,MAFZ;AAGE,cAAA,OAAO,EAAE,MAAM,KAAKZ,YAAL,CAAkBC,IAAlB,EAAwBC,IAAxB,CAHjB;AAAA,yBAKGU,KALH,EAKU,GALV,EAKeC,QAAQ,IAAI,GAL3B;AAAA,eACOZ,IADP;AAAA;AAAA;AAAA;AAAA,oBADF;AASA,WAZD,CAFH;AAAA,WAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAmBD,OApBP;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAvC8C;AA4CjD,eAAeF,iBAAf","sourcesContent":["import React, { Component } from \"react\"\nimport \"../css/productPage.css\"\n\nexport class ProductAttributes extends Component {\n\n\n  handleChange = (name, item) => {\n    const { selectedAttributes } = this.state\n    this.setState({ selectedAttributes: {\n      ...selectedAttributes,\n      [name]: item\n    } })\n  }\n\n  render() {\n    const { attributes, selectedAttributes } = this.props\n                                 // TODO: extract as attribute component, logica de afisare a selectorului\n    return (\n      <div>\n        {attributes.map(({ name, type, items }) => {\n                 return (\n                   <div key={name}>\n                     <div>{name}</div>\n                     {items.map((item) => {\n                       const { value } = item\n                       const selected = selectedAttributes[name].value === value\n                       return (\n                         <div\n                           key={name}\n                           className=\"text\"\n                           onClick={() => this.handleChange(name, item)}\n                         >\n                           {value}{\" \"}{selected && \"X\"}\n                         </div>\n                       )\n                      })\n                    }\n                   </div>\n                 )\n               })}\n      </div>\n    )\n  }\n\n}\n\n\nexport default ProductAttributes"]},"metadata":{},"sourceType":"module"}