{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alin\\\\Desktop\\\\Projects\\\\class-commerce\\\\src\\\\components\\\\ProductPage\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DataContext } from \"../Context\";\nimport ProductGallery from \"./ProductGallery\";\nimport ProductOptions from \"./ProductOptions\";\nimport \"./ProductPage.css\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selectedAttributes: {},\n      button: false\n    };\n\n    this.handleChange = (name, item) => {\n      const {\n        selectedAttributes\n      } = this.state;\n      this.setState({\n        selectedAttributes: { ...selectedAttributes,\n          [name]: item\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match = {}\n    } = this.props;\n    const {\n      params = {}\n    } = match;\n    const {\n      id\n    } = params;\n    this.loadProduct({\n      id\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    var _prevProps$match, _prevProps$match$para, _this$props, _this$props$match, _this$props$match$par;\n\n    const prevId = prevProps === null || prevProps === void 0 ? void 0 : (_prevProps$match = prevProps.match) === null || _prevProps$match === void 0 ? void 0 : (_prevProps$match$para = _prevProps$match.params) === null || _prevProps$match$para === void 0 ? void 0 : _prevProps$match$para.id;\n    const id = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.id;\n\n    if (prevId && id && prevId !== id) {\n      this.loadProduct({\n        id\n      });\n    }\n  }\n\n  handlePress() {\n    this.setState({\n      button: true\n    });\n  }\n\n  async loadProduct(_ref) {\n    let {\n      id\n    } = _ref;\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: `\n        query {\n            product (id: \"${id}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n      })\n    });\n    const {\n      data\n    } = await res.json();\n    const {\n      product\n    } = data || {};\n    this.setState({\n      product,\n      pictures: product.gallery,\n      attributes: product.attributes,\n      prices: product.prices,\n      description: product.description\n    });\n  }\n\n  render() {\n    var _prices$currentCurren, _prices$currentCurren2;\n\n    const {\n      currentCurrency,\n      addCart\n    } = this.context;\n    const {\n      product = {},\n      pictures = [],\n      attributes = [],\n      prices = [],\n      selectedAttributes = {},\n      description = \"\"\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productPage__container\",\n      children: [/*#__PURE__*/_jsxDEV(ProductGallery, {\n        pictures: pictures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productPage__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__brand\",\n          children: product.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__model\",\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productPage__attributes\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__options\",\n            children: attributes.map(_ref2 => {\n              let {\n                name,\n                type,\n                items\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(ProductOptions, {\n                name: name,\n                type: type,\n                items: items,\n                handleChange: this.handleChange,\n                selectedAttributes: selectedAttributes\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__price\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__priceText\",\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productPage__priceValue\",\n              children: [(_prices$currentCurren = prices[currentCurrency]) === null || _prices$currentCurren === void 0 ? void 0 : _prices$currentCurren.currency.symbol, (_prices$currentCurren2 = prices[currentCurrency]) === null || _prices$currentCurren2 === void 0 ? void 0 : _prices$currentCurren2.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `productPage__addButton${this.state.button}`,\n            onClick: () => {\n              addCart(product, selectedAttributes);\n            },\n            onMouseDown: () => {},\n            children: \"ADD TO CART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productPage__description\",\n            children: ReactHtmlParser(description)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nProductPage.contextType = DataContext;\nexport default _c = withRouter(ProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Alin/Desktop/Projects/class-commerce/src/components/ProductPage/index.js"],"names":["React","Component","withRouter","DataContext","ProductGallery","ProductOptions","ReactHtmlParser","ProductPage","state","selectedAttributes","button","handleChange","name","item","setState","componentDidMount","match","props","params","id","loadProduct","componentDidUpdate","prevProps","prevId","handlePress","res","fetch","method","headers","body","JSON","stringify","query","data","json","product","pictures","gallery","attributes","prices","description","render","currentCurrency","addCart","context","brand","map","type","items","currency","symbol","amount","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { DataContext } from \"../Context\"\nimport ProductGallery from \"./ProductGallery\"\nimport ProductOptions from \"./ProductOptions\"\nimport \"./ProductPage.css\"\nimport ReactHtmlParser from \"react-html-parser\"\n\n\nexport class ProductPage extends Component {\n  static contextType = DataContext\n  state = {\n    selectedAttributes: {},\n    button: false\n  }\n\ncomponentDidMount() {\n  const { match = {} } = this.props\n  const { params = {} } = match\n  const { id } = params\n  this.loadProduct({ id })\n}\n\ncomponentDidUpdate(prevProps) {\n  const prevId = prevProps?.match?.params?.id\n  const id = this.props?.match?.params?.id\n\n  if (prevId && id && prevId !== id) {\n    this.loadProduct({ id })\n  }\n}\n\nhandleChange = (name, item) => {\n  const { selectedAttributes } = this.state\n  this.setState({ selectedAttributes: {\n    ...selectedAttributes,\n    [name]: item\n  } })\n}\n\nhandlePress() {\n  this.setState({ button: true })\n}\n\nasync loadProduct({ id }) {\n  const res = await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query {\n            product (id: \"${id}\") { \n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n              id\n              name\n              type\n              items {\n                displayValue\n                value\n                id\n              }\n            }\n            prices {\n              currency {\n                label\n                symbol\n              }\n              amount\n            }\n            brand\n          }\n        }\n       `\n    })\n  })\n  const { data } = await res.json()\n  const { product } = data || {}\n  this.setState({\n    product,\n    pictures: product.gallery,\n    attributes: product.attributes,\n    prices: product.prices,\n    description: product.description\n  })\n}\n\n  render() {\n    const { currentCurrency, addCart } = this.context\n    const {\n      product = {},\n      pictures = [],\n      attributes = [],\n      prices = [],\n      selectedAttributes = {},\n      description = \"\"\n    } = this.state\n\n    return (\n      <div className=\"productPage__container\">\n        <ProductGallery pictures={pictures} />\n        <div className=\"productPage__content\">\n          <div className=\"productPage__brand\">{product.brand}</div>\n          <div className=\"productPage__model\">{product.name}</div>\n          <div className=\"productPage__attributes\" >\n            <div className=\"productPage__options\">\n              {attributes.map(({ name, type, items }) => {\n                 return (\n                   <ProductOptions\n                     name={name}\n                     type={type}\n                     items={items}\n                     handleChange={this.handleChange}\n                     selectedAttributes={selectedAttributes}\n                     key={type}\n                   />\n                 )\n                })}\n            </div>\n\n            <div className=\"productPage__price\">\n              <div className=\"productPage__priceText\">Price:</div>\n              <div className=\"productPage__priceValue\">\n                {prices[currentCurrency]?.currency.symbol}\n                {prices[currentCurrency]?.amount}\n              </div>\n            </div>\n            <button\n              className={`productPage__addButton${this.state.button}`}\n              onClick={() => {\n                  addCart(product, selectedAttributes)\n               }}\n              onMouseDown={() => {}}\n            >\n              ADD TO CART\n            </button>\n            <div className=\"productPage__description\">\n              {ReactHtmlParser(description)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n }\n\nexport default withRouter(ProductPage)"]},"metadata":{},"sourceType":"module"}